Index: kmail/kmfolderimap.cpp
===================================================================
--- kmail/kmfolderimap.cpp	(revision 487870)
+++ kmail/kmfolderimap.cpp	(revision 487871)
@@ -1352,21 +1352,26 @@
 //-----------------------------------------------------------------------------
 void KMFolderImap::flagsToStatus(KMMsgBase *msg, int flags, bool newMsg)
 {
-  if (flags & 4)
+  const KMMsgStatus oldStatus = msg->status();
+  // Set flags if they are new
+  if ( (flags & 4) && (oldStatus & KMMsgStatusFlag) == 0 )
     msg->setStatus( KMMsgStatusFlag );
-  if (flags & 2)
+  if ( (flags & 2) && (oldStatus & KMMsgStatusReplied) == 0 )
     msg->setStatus( KMMsgStatusReplied );
-  if (flags & 1)
+  if ( (flags & 1) && (oldStatus & KMMsgStatusOld) == 0 )
     msg->setStatus( KMMsgStatusOld );
 
   // In case the message does not have the seen flag set, override our local
   // notion that it is read. Otherwise the count of unread messages and the
   // number of messages which actually show up as read can go out of sync.
   if (msg->isOfUnknownStatus() || !(flags&1) ) {
-    if (newMsg)
-      msg->setStatus( KMMsgStatusNew );
-    else
-      msg->setStatus( KMMsgStatusUnread );
+    if (newMsg) {
+      if ( (oldStatus & KMMsgStatusNew) == 0 )
+        msg->setStatus( KMMsgStatusNew );
+    } else {
+      if ( (oldStatus & KMMsgStatusUnread) == 0 )
+        msg->setStatus( KMMsgStatusUnread );
+    }
   }
 }
 
Index: kmail/acljobs.cpp
===================================================================
--- kmail/acljobs.cpp	(revision 487870)
+++ kmail/acljobs.cpp	(revision 487871)
@@ -34,7 +34,9 @@
 
 using namespace KMail;
 
-static unsigned int IMAPRightsToPermission( const QString& str ) {
+// Convert str to an ACLPermissions value.
+// url and user are there only for the error message
+static unsigned int IMAPRightsToPermission( const QString& str, const KURL& url, const QString& user ) {
   unsigned int perm = 0;
   bool foundSeenPerm = false;
   uint len = str.length();
@@ -57,7 +59,7 @@
     // Reading without 'seen' is, well, annoying. Unusable, even.
     // So we treat 'rs' as a single one.
     // But if the permissions were set out of kmail, better check that both are set
-    kdWarning(5006) << "IMAPRightsToPermission: found read (r) but not seen (s). Things will not work well." << endl;
+    kdWarning(5006) << "IMAPRightsToPermission: found read (r) but not seen (s). Things will not work well for folder " << url << " and user " << ( user.isEmpty() ? "myself" : user ) << endl;
     if ( perm & ACLJobs::Administer )
       kdWarning(5006) << "You can change this yourself in the ACL dialog" << endl;
     else
@@ -177,7 +179,7 @@
   {
     QString user = lst.front(); lst.pop_front();
     QString imapRights = lst.front(); lst.pop_front();
-    unsigned int perm = IMAPRightsToPermission( imapRights );
+    unsigned int perm = IMAPRightsToPermission( imapRights, url(), user );
     m_entries.append( ACLListEntry( user, imapRights, perm ) );
   }
 }
@@ -193,7 +195,7 @@
 void ACLJobs::GetUserRightsJob::slotInfoMessage( KIO::Job*, const QString& str )
 {
   // Parse the result
-  m_permissions = IMAPRightsToPermission( str );
+  m_permissions = IMAPRightsToPermission( str, url(), QString::null );
 }
 
 ACLJobs::DeleteACLJob::DeleteACLJob( const KURL& url, const QString& userId,

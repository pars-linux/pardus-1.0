diff -Naur mpg123/layer3.c mpg123.long/layer3.c
--- mpg123/layer3.c	2001-01-23 07:10:02.000000000 -0800
+++ mpg123.long/layer3.c	2004-11-03 14:18:29.621155883 -0800
@@ -609,7 +609,7 @@
  * Dequantize samples (includes huffman decoding)
  */
 /* 24 is enough because tab13 has max. a 19 bit huffvector */
-#define BITSHIFT ((sizeof(long)-1)*8)
+#define BITSHIFT ((sizeof(int)-1)*8)
 #define REFRESH_MASK \
   while(num < BITSHIFT) { \
     mask |= ((unsigned long)getbyte(&bsi))<<(BITSHIFT-num); \
@@ -626,7 +626,7 @@
   int *me;
 
   int num=getbitoffset(&bsi);
-  long mask;
+  int mask;
   /* we must split this, because for num==0 the shift is undefined if you do it in one step */
   mask  = ((unsigned long) getbits(&bsi,num))<<BITSHIFT;
   mask <<= 8-num;
@@ -713,7 +713,7 @@
         if(x == 15 && h->linbits) {
           max[lwin] = cb;
           REFRESH_MASK;
-          x += ((unsigned long) mask) >> (BITSHIFT+8-h->linbits);
+          x += ((unsigned int) mask) >> (BITSHIFT+8-h->linbits);
           num -= h->linbits+1;
           mask <<= h->linbits;
           if(mask < 0)
@@ -737,7 +737,7 @@
         if(y == 15 && h->linbits) {
           max[lwin] = cb;
           REFRESH_MASK;
-          y += ((unsigned long) mask) >> (BITSHIFT+8-h->linbits);
+          y += ((unsigned int) mask) >> (BITSHIFT+8-h->linbits);
           num -= h->linbits+1;
           mask <<= h->linbits;
           if(mask < 0)
@@ -891,7 +891,7 @@
         if (x == 15 && h->linbits) {
           max = cb;
 	  REFRESH_MASK;
-          x += ((unsigned long) mask) >> (BITSHIFT+8-h->linbits);
+          x += ((unsigned int) mask) >> (BITSHIFT+8-h->linbits);
           num -= h->linbits+1;
           mask <<= h->linbits;
           if(mask < 0)
@@ -915,7 +915,7 @@
         if (y == 15 && h->linbits) {
           max = cb;
 	  REFRESH_MASK;
-          y += ((unsigned long) mask) >> (BITSHIFT+8-h->linbits);
+          y += ((unsigned int) mask) >> (BITSHIFT+8-h->linbits);
           num -= h->linbits+1;
           mask <<= h->linbits;
           if(mask < 0)

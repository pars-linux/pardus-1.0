o AIX boxes use '##username' in the passwd field to indicate that the account
  is shadowed, so abstract out the is-it-shadowed check into a function and use
  that instead.  Also, to avoid breaking already-shadowed accounts, don't mess
  with the passwd field if we're updating a shadow password and the passwd
  field already indicates that the account is shadowed.
--- Linux-PAM-0.77/modules/pam_unix/pam_unix_acct.c	2003-06-30 22:31:41.000000000 -0400
+++ Linux-PAM-0.77/modules/pam_unix/pam_unix_acct.c	2003-06-30 22:35:12.000000000 -0400
@@ -122,7 +122,7 @@
 			setreuid( -1, save_euid );
 		}
 
-	} else if (!strcmp( pwent->pw_passwd, "x" )) {
+	} else if (_unix_shadowed( pwent )) {
 		spent = getspnam(uname);
 	} else {
 		return PAM_SUCCESS;
--- Linux-PAM-0.77/modules/pam_unix/pam_unix_passwd.c	2003-06-30 22:31:41.000000000 -0400
+++ Linux-PAM-0.77/modules/pam_unix/pam_unix_passwd.c	2003-06-30 22:37:07.000000000 -0400
@@ -594,10 +594,11 @@
 		return PAM_AUTHTOK_ERR;
 	}
 	if (_unix_comesfromsource(pamh, forwho, 1, 0)) {
-		if (on(UNIX_SHADOW, ctrl) || (strcmp(pwd->pw_passwd, "x") == 0)) {
+		if (on(UNIX_SHADOW, ctrl) || _unix_shadowed(pwd)) {
 			retval = _update_shadow(forwho, towhat);
 			if (retval == PAM_SUCCESS)
-				retval = _update_passwd(pamh, forwho, "x");
+				if (!_unix_shadowed(pwd))
+					retval = _update_passwd(pamh, forwho, "x");
 		} else {
 			retval = _update_passwd(pamh, forwho, towhat);
 		}
@@ -620,7 +621,7 @@
 	if (pwd == NULL)
 		return PAM_AUTHINFO_UNAVAIL;	/* We don't need to do the rest... */
 
-	if (strcmp(pwd->pw_passwd, "x") == 0) {
+	if (_unix_shadowed(pwd)) {
 		/* ...and shadow password file entry for this user, if shadowing
 		   is enabled */
 		setspent();
@@ -812,7 +813,7 @@
 	} else {
 		struct passwd *pwd;
 		_unix_getpwnam(pamh, user, 1, 1, &pwd);
-		if ((strcmp(pwd->pw_passwd, "x") != 0) &&
+		if (!_unix_shadowed(pwd) &&
 		    (strchr(pwd->pw_passwd, '*') != NULL)) {
 			_log_err(LOG_DEBUG, pamh,
 				"user \"%s\" does not have modifiable password",
--- Linux-PAM-0.77/modules/pam_unix/support.c	2003-06-30 22:31:41.000000000 -0400
+++ Linux-PAM-0.77/modules/pam_unix/support.c	2003-06-30 22:34:24.000000000 -0400
@@ -552,7 +552,7 @@
 					setreuid( save_uid, -1 );
 				setreuid( -1, save_euid );
 			}
-		} else if (strcmp(pwd->pw_passwd, "x") == 0) {
+		} else if (_unix_shadowed(pwd)) {
 			/*
 			 * ...and shadow password file entry for this user,
 			 * if shadowing is enabled
@@ -739,7 +739,7 @@
 				setreuid( save_uid, -1 );
 				setreuid( -1, save_euid );
 			}
-		} else if (strcmp(pwd->pw_passwd, "x") == 0) {
+		} else if (_unix_shadowed(pwd)) {
 			/*
 			 * ...and shadow password file entry for this user,
 			 * if shadowing is enabled
@@ -761,7 +761,7 @@
 	}
 
 	retval = PAM_SUCCESS;
-	if (pwd == NULL || salt == NULL || !strcmp(salt, "x")) {
+	if (pwd == NULL || salt == NULL || !strcmp(salt, "x") || ((salt[0] == '#') && (salt[1] == '#') && !strcmp(salt + 2, name))) {
 		if (geteuid()) {
 			/* we are not root perhaps this is the reason? Run helper */
 			D(("running helper binary"));
@@ -1083,6 +1083,21 @@
 	return PAM_SUCCESS;
 }
 
+int _unix_shadowed(const struct passwd *pwd)
+{
+	if (pwd != NULL) {
+		if (strcmp(pwd->pw_passwd, "x") == 0) {
+			return 1;
+		}
+		if ((pwd->pw_passwd[0] == '#') &&
+		    (pwd->pw_passwd[1] == '#') &&
+		    (strcmp(pwd->pw_name, pwd->pw_passwd + 2) == 0)) {
+			return 1;
+		}
+	}
+	return 0;
+}
+
 /* ****************************************************************** *
  * Copyright (c) Jan Rêkorajski 1999.
  * Copyright (c) Andrew G. Morgan 1996-8.
--- Linux-PAM-0.77/modules/pam_unix/support.h	2003-06-30 22:31:41.000000000 -0400
+++ Linux-PAM-0.77/modules/pam_unix/support.h	2003-06-30 22:31:41.000000000 -0400
@@ -150,6 +150,7 @@
 			,const char *prompt2
 			,const char *data_name
 			,const char **pass);
+extern int _unix_shadowed(const struct passwd *pwd);
 
 #endif /* _PAM_UNIX_SUPPORT_H */
 
--- Linux-PAM-0.77/modules/pam_unix/unix_chkpwd.c	2003-06-30 22:31:41.000000000 -0400
+++ Linux-PAM-0.77/modules/pam_unix/unix_chkpwd.c	2003-06-30 22:31:41.000000000 -0400
@@ -57,6 +57,24 @@
 	closelog();
 }
 
+static int _unix_shadowed(const struct passwd *pwd)
+{
+	char hashpass[1024];
+	if (pwd != NULL) {
+		if (strcmp(pwd->pw_passwd, "x") == 0) {
+			return 1;
+		}
+		if (strlen(pwd->pw_name) < sizeof(hashpass) - 2) {
+			strcpy(hashpass, "##");
+			strcpy(hashpass + 2, pwd->pw_name);
+			if (strcmp(pwd->pw_passwd, hashpass) == 0) {
+				return 1;
+			}
+		}
+	}
+	return 0;
+}
+
 static void su_sighandler(int sig)
 {
 	if (sig > 0) {
@@ -116,7 +134,7 @@
 	pwd = getpwnam(name);	/* Get password file entry... */
 	endpwent();
 	if (pwd != NULL) {
-		if (strcmp(pwd->pw_passwd, "x") == 0) {
+		if (_unix_shadowed(pwd)) {
 			/*
 			 * ...and shadow password file entry for this user,
 			 * if shadowing is enabled

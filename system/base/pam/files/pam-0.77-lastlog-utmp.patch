When we're managing lastlog, manage utmp/twmp as well.

--- Linux-PAM-0.77/modules/pam_lastlog/pam_lastlog.c	2003-07-07 19:27:56.000000000 -0400
+++ Linux-PAM-0.77/modules/pam_lastlog/pam_lastlog.c	2003-07-07 19:59:45.000000000 -0400
@@ -202,7 +203,8 @@
  * Values for the announce flags..
  */
 
-static int last_login_date(pam_handle_t *pamh, int announce, uid_t uid)
+static int last_login_date(pam_handle_t *pamh, int announce, uid_t uid,
+			   const char *user)
 {
     struct flock last_lock;
     struct lastlog last_login;
@@ -379,8 +380,11 @@
 	    D(("unlocked"));
 
 	    close(last_fd);                                  /* all done */
+	    D(("all done with last login"));
+
+	    /* write wtmp entry for user */
+	    logwtmp(last_login.ll_line, user, last_login.ll_host);
 	}
-	D(("all done with last login"));
     }
 
     /* reset the last login structure */
@@ -426,8 +430,7 @@
     pwd = NULL;                                         /* tidy up */
 
     /* process the current login attempt (indicate last) */
-
-    retval = last_login_date(pamh, ctrl, uid);
+    retval = last_login_date(pamh, ctrl, uid, user);
 
     /* indicate success or failure */
 
@@ -440,7 +443,22 @@
 int pam_sm_close_session(pam_handle_t *pamh,int flags,int argc
 			 ,const char **argv)
 {
-    return PAM_SUCCESS;
+    const char *terminal_line;
+
+    pam_get_item(pamh, PAM_TTY, (const void **)&terminal_line);
+
+    D(("terminal = %s", terminal_line));
+
+    if (terminal_line == NULL) {
+	terminal_line = DEFAULT_TERM;
+    } else if ( !strncmp("/dev/", terminal_line, 5) ) {
+	/* strip leading "/dev/" from tty */
+	terminal_line += 5;
+    }
+    /* Wipe out utmp logout entry */
+    logwtmp(terminal_line, "", "");
+
+    return PAM_SUCCESS;       
 }
 
 #ifdef PAM_STATIC
